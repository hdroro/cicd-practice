name: CI/CD with Render and DB (Docker)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Log in to DockerHub
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin

    - name: Build Docker Image
      run: |
        docker build -t cicd-practice:latest .

    - name: Run Tests Inside Docker
      run: |
        docker run --rm cicd-practice:latest npm run test

    - name: Push Docker Image to DockerHub
      if: success()
      run: |
        docker tag cicd-practice:latest ${{ secrets.DOCKER_USER }}/cicd-practice:latest
        docker push ${{ secrets.DOCKER_USER }}/cicd-practice:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Run Migrations and Seeders
      env:
        REDIS_URL: ${{ secrets.REDIS_URL }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_DIALECT: ${{ secrets.DB_DIALECT }}
      run: |
        docker run --rm \
          -e REDIS_URL=$REDIS_URL \
          -e DB_HOST=$DB_HOST \
          -e DB_USER=$DB_USER \
          -e DB_PASSWORD=$DB_PASSWORD \
          -e DB_NAME=$DB_NAME \
          -e DB_PORT=$DB_PORT \
          -e DB_DIALECT=$DB_DIALECT \
          ${{ secrets.DOCKER_USER }}/cicd-practice:latest npm run migrate

    - name: Deploy to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        curl -v -X POST \
        -H "Authorization: Bearer $RENDER_API_KEY" \
        -H "Content-Type: application/json" \
        -d '{"clearCache":true}' \
        https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys
